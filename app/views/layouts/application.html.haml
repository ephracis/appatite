%html
  %head
    %title Appatite
    = csrf_meta_tags
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_include_tag 'application', 'data-turbolinks-track': 'reload'

  %body
    %nav.navbar.navbar-default
      .container-fluid
        .navbar-header
          %button.navbar-toggle.collapsed{ type: 'button', data: { toggle: 'collapse', target: "#bs-example-navbar-collapse-1" } }
            %span.sr-only Toggle navigation
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          =link_to 'Appatite', root_path, class: 'navbar-brand'

        .collapse.navbar-collapse#navbar-collapse-1
          %ul.nav.navbar-nav
            %li= link_to 'Projects', projects_path
            %li= link_to 'About', '/about'
            - if admin?
              %li= link_to 'Admin', admin_overview_path

          %ul.nav.navbar-nav.navbar-right
            - if user_signed_in?
              %li.dropdown
                %a.dropdown-toggle{ href: '#', data: { toggle: 'dropdown' }, role: 'button', aria: { haspopup: true, expanded: false }}
                  = current_user.name
                  %span.caret
                %ul.dropdown-menu
                  %li
                    = link_to user_path(current_user) do
                      %span.fa.fa-user
                      Profile
                  %li
                    = link_to edit_user_path(current_user) do
                      %span.fa.fa-cog
                      Settings
                  %li.divider{ role: 'separator' }
                  %li
                    = link_to destroy_user_session_path, method: :delete do
                      %span.fa.fa-sign-out
                      Logout
            - else
              %li
                = link_to new_user_session_path do
                  %span.fa.fa-sign-in
                  Login

    - if notice
      .alert.alert-global.alert-success
        = notice

    - if alert
      .alert.alert-global.alert-danger
        = alert

    = content_for?(:content) ? yield(:content) : yield